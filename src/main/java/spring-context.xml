<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<!-- This is the configuration of connection pool hikari -->
	<!-- http://brettwooldridge.github.io/HikariCP/ -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="maximumPoolSize" value="5" />
		<property name="dataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
		<property name="dataSourceProperties">
			<props>
				<prop key="databaseName">pygmalion</prop>
				<prop key="serverName">localhost</prop>
				<prop key="user">root</prop>
				<prop key="password">base</prop>
			</props>
		</property>
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg index="0" ref="hikariConfig"></constructor-arg>
	</bean>
	<!-- Because LocalSessionFactoryBean implements FactoryBean<SessionFactory>, 
		so this bean will return a SessionFactory object. -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- if you use annotation to define the ORM, then you have to list every 
			class in hibernate.cfg.xml Now with spring's help, you can specify the package 
			that contains ORM beans and remove all those classes in hibernate.cfg.xml -->
		<property name="packagesToScan">
			<array>
				<value>sgq.web.pygmalion.bean</value>
				<value>sgq.web.console.bean</value>
			</array>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="log4j.logger.org.hibernate.SQL">debug</prop>
				<prop key="log4j.logger.org.hibernate.type">trace</prop>
			</props>
		</property>
	</bean>
	<bean id="daoCommonInjection" abstract="true">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="articleDao" class="sgq.web.pygmalion.dao.ArticleDao" parent="daoCommonInjection">
	</bean>
	<bean id="userDao" class="sgq.web.pygmalion.dao.UserDao" parent="daoCommonInjection">
	</bean>
	<bean id="wordsetDao" class="sgq.web.console.dao.WordsetDao" parent="daoCommonInjection">
	</bean>
	<bean id="wmdsDao" class="sgq.web.console.dao.WordMemoryDailyStatisticsDao" parent="daoCommonInjection">
	</bean>
	<bean id="articleService" class="sgq.web.pygmalion.service.ArticleService">
		<property name="articleDao" ref="articleDao"></property>
	</bean>
	<bean id="userService" class="sgq.web.pygmalion.service.UserService">
		<property name="userDao" ref="userDao"></property>
	</bean>
	<bean id="wordsetService" class="sgq.web.console.service.WordsetService">
		<property name="wordsetDao" ref="wordsetDao"></property>
	</bean>
	<bean id="wmdsService" class="sgq.web.console.service.WordMemoryDailyStatisticsService">
		<property name="wmdsDao" ref="wmdsDao"></property>
	</bean>
	<bean id="homeAction" class="sgq.web.pygmalion.action.HomeAction" scope="prototype">
		<property name="articleService" ref="articleService"></property>
	</bean>
	<bean id="articleAction" class="sgq.web.pygmalion.action.ArticleAction" scope="prototype">
		<property name="articleService" ref="articleService"></property>
	</bean>
	<bean id="loginAction" class="sgq.web.pygmalion.action.LoginAction" scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	<bean id="consoleAction" class="sgq.web.console.action.ConsoleAction" scope="prototype">
		<property name="wordsetService" ref="wordsetService"></property>
		<property name="wmdsService" ref="wmdsService"></property>
	</bean>
</beans>